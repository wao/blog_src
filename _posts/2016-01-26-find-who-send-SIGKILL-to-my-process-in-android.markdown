---
layout: post
title:  "Find who sent SIGKILL to my process on Android?"
date:   2015-12-11 10:36:29
tags: androiddev
---

Recently, I have to resolve a bug which I found my service is misteriously killed. No other clue, just a log line: "Process xxxxx died".

## Tombstone and Debuggerd

First, I check the tombstones log and susperious to find nothing. After several digging in internet and source code of android, I found following fact:

1, Tombstone log is generated by debuggered, nothing related to common core-dump of linux. After launching, debuggered listens to a unix-domain path.
2, From folloing post [debuggerd of Android](http://t2koba.blogspot.com/2011/05/debuggerd-of-android.html), android uses a trick to let debuggered ptrace crashed app and dump tobmstones. The secrete is in file `bionic/linker/debugger.c`. Function `debugger_init()` will use sigaction to register handler to handle serval signal and notify debuggered in signal handler.

From above facts, we can conclude following result:

1, If some application register a new signal handler, without call prev signal handler, the tomestone dump function will be brokened.
2, Since SIGKILL can't be handled by `signal_action`, SIGKILL will never generate tombstone log.

Now, I understand that my process is killed by SIGKILL.

## Sigkill in kernel

In linux kernel, in file `kernel/signal.c`, function `send_signal` is used to send signal from one process to another process. I add following code to dump log:

```
       if( sig == 9 ){
        printk( KERN_ERR "SIGKILL send from %d to %d", current->pid, t->pid );
        dump_stack();
    }
```

## Sigkill in android

I also research in android, all the kill code finally call `android_os_killProcessGroup()` to kill process.

I also found, if android found that one binder is dead, it'll send a SIGKILL to the process even if process is already killed. I was confused here for almost 3 days thought that my process is killed due to binder dead. Finally, from sigkill log in kernel, I found that my process is kill by a third-part library in my own process, and android send SIGKILL to my process later, which mislead me.
